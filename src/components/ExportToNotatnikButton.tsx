'use client'

import { useState } from 'react';

interface ExportToNotatnikButtonProps {
  noteId: string;
  noteType: 'video' | 'file' | 'text' | 'video-upload';
  noteTitle: string;
  noteContent: string;
  className?: string;
}

export default function ExportToNotatnikButton({
  noteId,
  noteType,
  noteTitle,
  noteContent,
  className = ''
}: ExportToNotatnikButtonProps) {
  const [isExporting, setIsExporting] = useState(false);
  const [showSuccess, setShowSuccess] = useState(false);

  const handleExport = async () => {
    if (isExporting) return;

    setIsExporting(true);
    
    try {
      // Create the content with EDUSCRIBE header
      const fileContent = `EDUSCRIBE: ${noteTitle}

${'='.repeat(50)}

${noteContent}

${'='.repeat(50)}
Generated by EduScribe - AI-powered note generation
`;

      // Convert markdown-like content to plain text
      const plainTextContent = fileContent
        .replace(/#{1,6}\s+/g, '') // Remove markdown headers
        .replace(/\*\*(.*?)\*\*/g, '$1') // Remove bold formatting
        .replace(/\*(.*?)\*/g, '$1') // Remove italic formatting
        .replace(/`(.*?)`/g, '$1') // Remove code formatting
        .replace(/\[(.*?)\]\(.*?\)/g, '$1') // Convert links to just text
        .replace(/---+/g, '─'.repeat(50)) // Convert horizontal rules
        .replace(/•/g, '- ') // Convert bullet points
        .replace(/📝|📖|🎥|📹|📄|📁|🧠|⭐|🔥/g, '') // Remove emojis
        .trim();

      // Create blob and download
      const blob = new Blob([plainTextContent], { type: 'text/plain;charset=utf-8' });
      const url = URL.createObjectURL(blob);
      
      // Create download link
      const link = document.createElement('a');
      link.href = url;
      link.download = 'eduscribe_note.txt';
      
      // Trigger download
      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);
      
      // Clean up
      URL.revokeObjectURL(url);

      setShowSuccess(true);
      // Hide success message after 3 seconds
      setTimeout(() => setShowSuccess(false), 3000);

    } catch (error) {
      console.error('Failed to export note:', error);
    } finally {
      setIsExporting(false);
    }
  };

  // Show success state
  if (showSuccess) {
    return (
      <div className="relative group">
        <button
          disabled
          className={`bg-green-600 text-white px-3 py-1.5 rounded-md flex items-center gap-2 ${className}`}
        >
          <svg className="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
          </svg>
          Downloaded!
        </button>
      </div>
    );
  }

  // Show loading state
  if (isExporting) {
    return (
      <div className="relative group">
        <button
          disabled
          className={`bg-purple-600 text-white px-3 py-1.5 rounded-md flex items-center gap-2 ${className}`}
        >
          <div className="w-3 h-3 border-2 border-white border-t-transparent rounded-full animate-spin"></div>
          Exporting...
        </button>
      </div>
    );
  }

  // Show normal state
  return (
    <div className="relative group">
      <button
        onClick={handleExport}
        className={`bg-purple-600 text-white px-3 py-1.5 rounded-md hover:bg-purple-700 transition-colors flex items-center gap-2 ${className}`}
      >
        <svg className="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
        </svg>
        Export to Notatnik
      </button>
      
      {/* Tooltip */}
      <div className="absolute bottom-full right-0 mb-2 hidden group-hover:block z-10">
        <div className="bg-gray-900 text-white text-xs rounded-lg px-3 py-2 whitespace-nowrap">
          Downloads as .txt file - open with Notepad or any text editor
          <div className="absolute top-full right-6 w-0 h-0 border-l-4 border-r-4 border-t-4 border-transparent border-t-gray-900"></div>
        </div>
      </div>
    </div>
  );
} 