/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@ffmpeg-installer";
exports.ids = ["vendor-chunks/@ffmpeg-installer"];
exports.modules = {

/***/ "(rsc)/./node_modules/@ffmpeg-installer/ffmpeg/index.js":
/*!********************************************************!*\
  !*** ./node_modules/@ffmpeg-installer/ffmpeg/index.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar os = __webpack_require__(/*! os */ \"os\");\nvar path = __webpack_require__(/*! path */ \"path\");\n\nvar verifyFile = __webpack_require__(/*! ./lib/verify-file */ \"(rsc)/./node_modules/@ffmpeg-installer/ffmpeg/lib/verify-file.js\");\n\nvar platform = os.platform() + '-' + os.arch();\n\nvar packageName = '@ffmpeg-installer/' + platform;\n\nif (!(__webpack_require__(/*! ./package.json */ \"(rsc)/./node_modules/@ffmpeg-installer/ffmpeg/package.json\").optionalDependencies)[packageName]) {\n    throw 'Unsupported platform/architecture: ' + platform;\n}\n\nvar binary = os.platform() === 'win32' ? 'ffmpeg.exe' : 'ffmpeg';\n\nvar topLevelPath = path.resolve(__dirname.substr(0, __dirname.indexOf('node_modules')), 'node_modules', '@ffmpeg-installer', platform);\nvar npm3Path = path.resolve(__dirname, '..', platform);\nvar npm2Path = path.resolve(__dirname, 'node_modules', '@ffmpeg-installer', platform);\n\nvar topLevelBinary = path.join(topLevelPath, binary);\nvar npm3Binary = path.join(npm3Path, binary);\nvar npm2Binary = path.join(npm2Path, binary);\n\nvar topLevelPackage = path.join(topLevelPath, 'package.json');\nvar npm3Package = path.join(npm3Path, 'package.json');\nvar npm2Package = path.join(npm2Path, 'package.json');\n\nvar ffmpegPath, packageJson;\n\nif (verifyFile(npm3Binary)) {\n    ffmpegPath = npm3Binary;\n    packageJson = __webpack_require__(\"(rsc)/./node_modules/@ffmpeg-installer/ffmpeg sync recursive\")(npm3Package);\n} else if (verifyFile(npm2Binary)) {\n    ffmpegPath = npm2Binary;\n    packageJson = __webpack_require__(\"(rsc)/./node_modules/@ffmpeg-installer/ffmpeg sync recursive\")(npm2Package);\n} else if (verifyFile(topLevelBinary)) {\n    ffmpegPath = topLevelBinary;\n    packageJson = __webpack_require__(\"(rsc)/./node_modules/@ffmpeg-installer/ffmpeg sync recursive\")(topLevelPackage);\n} else {\n    throw 'Could not find ffmpeg executable, tried \"' + npm3Binary + '\", \"' + npm2Binary + '\" and \"' + topLevelBinary + '\"';\n}\n\nvar version = packageJson.ffmpeg || packageJson.version;\nvar url = packageJson.homepage;\n\n/**\n * @type {{\n *  path: string;\n *  version: string;\n *  url: string;\n * }}\n */\nmodule.exports = {\n    path: ffmpegPath,\n    version: version,\n    url: url\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGZmbXBlZy1pbnN0YWxsZXIvZmZtcGVnL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLFNBQVMsbUJBQU8sQ0FBQyxjQUFJO0FBQ3JCLFdBQVcsbUJBQU8sQ0FBQyxrQkFBTTs7QUFFekIsaUJBQWlCLG1CQUFPLENBQUMsMkZBQW1COztBQUU1Qzs7QUFFQTs7QUFFQSxLQUFLLDhIQUE4QztBQUNuRDtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxrQkFBa0Isb0ZBQVEsV0FBVyxDQUFDO0FBQ3RDLEVBQUU7QUFDRjtBQUNBLGtCQUFrQixvRkFBUSxXQUFXLENBQUM7QUFDdEMsRUFBRTtBQUNGO0FBQ0Esa0JBQWtCLG9GQUFRLGVBQWUsQ0FBQztBQUMxQyxFQUFFO0FBQ0Y7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2VkdXNjcmliZS8uL25vZGVfbW9kdWxlcy9AZmZtcGVnLWluc3RhbGxlci9mZm1wZWcvaW5kZXguanM/MjI5OCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBvcyA9IHJlcXVpcmUoJ29zJyk7XG52YXIgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcblxudmFyIHZlcmlmeUZpbGUgPSByZXF1aXJlKCcuL2xpYi92ZXJpZnktZmlsZScpO1xuXG52YXIgcGxhdGZvcm0gPSBvcy5wbGF0Zm9ybSgpICsgJy0nICsgb3MuYXJjaCgpO1xuXG52YXIgcGFja2FnZU5hbWUgPSAnQGZmbXBlZy1pbnN0YWxsZXIvJyArIHBsYXRmb3JtO1xuXG5pZiAoIXJlcXVpcmUoJy4vcGFja2FnZS5qc29uJykub3B0aW9uYWxEZXBlbmRlbmNpZXNbcGFja2FnZU5hbWVdKSB7XG4gICAgdGhyb3cgJ1Vuc3VwcG9ydGVkIHBsYXRmb3JtL2FyY2hpdGVjdHVyZTogJyArIHBsYXRmb3JtO1xufVxuXG52YXIgYmluYXJ5ID0gb3MucGxhdGZvcm0oKSA9PT0gJ3dpbjMyJyA/ICdmZm1wZWcuZXhlJyA6ICdmZm1wZWcnO1xuXG52YXIgdG9wTGV2ZWxQYXRoID0gcGF0aC5yZXNvbHZlKF9fZGlybmFtZS5zdWJzdHIoMCwgX19kaXJuYW1lLmluZGV4T2YoJ25vZGVfbW9kdWxlcycpKSwgJ25vZGVfbW9kdWxlcycsICdAZmZtcGVnLWluc3RhbGxlcicsIHBsYXRmb3JtKTtcbnZhciBucG0zUGF0aCA9IHBhdGgucmVzb2x2ZShfX2Rpcm5hbWUsICcuLicsIHBsYXRmb3JtKTtcbnZhciBucG0yUGF0aCA9IHBhdGgucmVzb2x2ZShfX2Rpcm5hbWUsICdub2RlX21vZHVsZXMnLCAnQGZmbXBlZy1pbnN0YWxsZXInLCBwbGF0Zm9ybSk7XG5cbnZhciB0b3BMZXZlbEJpbmFyeSA9IHBhdGguam9pbih0b3BMZXZlbFBhdGgsIGJpbmFyeSk7XG52YXIgbnBtM0JpbmFyeSA9IHBhdGguam9pbihucG0zUGF0aCwgYmluYXJ5KTtcbnZhciBucG0yQmluYXJ5ID0gcGF0aC5qb2luKG5wbTJQYXRoLCBiaW5hcnkpO1xuXG52YXIgdG9wTGV2ZWxQYWNrYWdlID0gcGF0aC5qb2luKHRvcExldmVsUGF0aCwgJ3BhY2thZ2UuanNvbicpO1xudmFyIG5wbTNQYWNrYWdlID0gcGF0aC5qb2luKG5wbTNQYXRoLCAncGFja2FnZS5qc29uJyk7XG52YXIgbnBtMlBhY2thZ2UgPSBwYXRoLmpvaW4obnBtMlBhdGgsICdwYWNrYWdlLmpzb24nKTtcblxudmFyIGZmbXBlZ1BhdGgsIHBhY2thZ2VKc29uO1xuXG5pZiAodmVyaWZ5RmlsZShucG0zQmluYXJ5KSkge1xuICAgIGZmbXBlZ1BhdGggPSBucG0zQmluYXJ5O1xuICAgIHBhY2thZ2VKc29uID0gcmVxdWlyZShucG0zUGFja2FnZSk7XG59IGVsc2UgaWYgKHZlcmlmeUZpbGUobnBtMkJpbmFyeSkpIHtcbiAgICBmZm1wZWdQYXRoID0gbnBtMkJpbmFyeTtcbiAgICBwYWNrYWdlSnNvbiA9IHJlcXVpcmUobnBtMlBhY2thZ2UpO1xufSBlbHNlIGlmICh2ZXJpZnlGaWxlKHRvcExldmVsQmluYXJ5KSkge1xuICAgIGZmbXBlZ1BhdGggPSB0b3BMZXZlbEJpbmFyeTtcbiAgICBwYWNrYWdlSnNvbiA9IHJlcXVpcmUodG9wTGV2ZWxQYWNrYWdlKTtcbn0gZWxzZSB7XG4gICAgdGhyb3cgJ0NvdWxkIG5vdCBmaW5kIGZmbXBlZyBleGVjdXRhYmxlLCB0cmllZCBcIicgKyBucG0zQmluYXJ5ICsgJ1wiLCBcIicgKyBucG0yQmluYXJ5ICsgJ1wiIGFuZCBcIicgKyB0b3BMZXZlbEJpbmFyeSArICdcIic7XG59XG5cbnZhciB2ZXJzaW9uID0gcGFja2FnZUpzb24uZmZtcGVnIHx8IHBhY2thZ2VKc29uLnZlcnNpb247XG52YXIgdXJsID0gcGFja2FnZUpzb24uaG9tZXBhZ2U7XG5cbi8qKlxuICogQHR5cGUge3tcbiAqICBwYXRoOiBzdHJpbmc7XG4gKiAgdmVyc2lvbjogc3RyaW5nO1xuICogIHVybDogc3RyaW5nO1xuICogfX1cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgcGF0aDogZmZtcGVnUGF0aCxcbiAgICB2ZXJzaW9uOiB2ZXJzaW9uLFxuICAgIHVybDogdXJsXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@ffmpeg-installer/ffmpeg/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@ffmpeg-installer/ffmpeg/lib/verify-file.js":
/*!******************************************************************!*\
  !*** ./node_modules/@ffmpeg-installer/ffmpeg/lib/verify-file.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var fs = __webpack_require__(/*! fs */ \"fs\");\n\n/**\n * @param {string} file\n * @return {boolean}\n */\nfunction verifyFile(file) {\n    try {\n        var stats = fs.statSync(file);\n        return stats.isFile();\n    } catch (ignored) {\n        return false;\n    }\n}\n\nmodule.exports = verifyFile;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGZmbXBlZy1pbnN0YWxsZXIvZmZtcGVnL2xpYi92ZXJpZnktZmlsZS5qcyIsIm1hcHBpbmdzIjoiQUFBQSxTQUFTLG1CQUFPLENBQUMsY0FBSTs7QUFFckI7QUFDQSxXQUFXLFFBQVE7QUFDbkIsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZWR1c2NyaWJlLy4vbm9kZV9tb2R1bGVzL0BmZm1wZWctaW5zdGFsbGVyL2ZmbXBlZy9saWIvdmVyaWZ5LWZpbGUuanM/OGIxZCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZnMgPSByZXF1aXJlKCdmcycpO1xuXG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nfSBmaWxlXG4gKiBAcmV0dXJuIHtib29sZWFufVxuICovXG5mdW5jdGlvbiB2ZXJpZnlGaWxlKGZpbGUpIHtcbiAgICB0cnkge1xuICAgICAgICB2YXIgc3RhdHMgPSBmcy5zdGF0U3luYyhmaWxlKTtcbiAgICAgICAgcmV0dXJuIHN0YXRzLmlzRmlsZSgpO1xuICAgIH0gY2F0Y2ggKGlnbm9yZWQpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSB2ZXJpZnlGaWxlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@ffmpeg-installer/ffmpeg/lib/verify-file.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@ffmpeg-installer/ffmpeg/package.json":
/*!************************************************************!*\
  !*** ./node_modules/@ffmpeg-installer/ffmpeg/package.json ***!
  \************************************************************/
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('{"name":"@ffmpeg-installer/ffmpeg","version":"1.1.0","main":"index.js","scripts":{"lint":"jshint *.js","preversion":"npm run lint","types":"tsc","preupload":"npm run types","upload":"npm --userconfig=.npmrc publish --access public","test":"tsd"},"types":"types/index.d.ts","keywords":["ffmpeg","binary","installer","audio","sound"],"author":"Kristoffer Lund√©n <kristoffer.lunden@gmail.com>","license":"LGPL-2.1","description":"Platform independent binary installer of FFmpeg for node projects","optionalDependencies":{"@ffmpeg-installer/darwin-arm64":"4.1.5","@ffmpeg-installer/darwin-x64":"4.1.0","@ffmpeg-installer/linux-arm":"4.1.3","@ffmpeg-installer/linux-arm64":"4.1.4","@ffmpeg-installer/linux-ia32":"4.1.0","@ffmpeg-installer/linux-x64":"4.1.0","@ffmpeg-installer/win32-ia32":"4.1.0","@ffmpeg-installer/win32-x64":"4.1.0"},"devDependencies":{"jshint":"^2.9.3","tsd":"^0.14.0","typescript":"^4.2.3"},"repository":{"type":"git","url":"git+https://github.com/kribblo/node-ffmpeg-installer.git"},"bugs":{"url":"https://github.com/kribblo/node-ffmpeg-installer/issues"},"homepage":"https://github.com/kribblo/node-ffmpeg-installer#readme"}');

/***/ })

};
;