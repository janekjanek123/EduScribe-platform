"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/subtitle";
exports.ids = ["vendor-chunks/subtitle"];
exports.modules = {

/***/ "(rsc)/./node_modules/subtitle/dist/subtitle.esm.js":
/*!****************************************************!*\
  !*** ./node_modules/subtitle/dist/subtitle.esm.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RE_TIMESTAMP: () => (/* binding */ RE_TIMESTAMP),\n/* harmony export */   filter: () => (/* binding */ filter),\n/* harmony export */   formatTimestamp: () => (/* binding */ formatTimestamp),\n/* harmony export */   map: () => (/* binding */ map),\n/* harmony export */   parse: () => (/* binding */ parse),\n/* harmony export */   parseSync: () => (/* binding */ parseSync),\n/* harmony export */   parseTimestamp: () => (/* binding */ parseTimestamp),\n/* harmony export */   parseTimestamps: () => (/* binding */ parseTimestamps),\n/* harmony export */   resync: () => (/* binding */ resync),\n/* harmony export */   stringify: () => (/* binding */ stringify),\n/* harmony export */   stringifySync: () => (/* binding */ stringifySync)\n/* harmony export */ });\n/* harmony import */ var readable_stream__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! readable-stream */ \"(rsc)/./node_modules/readable-stream/lib/ours/index.js\");\n/* harmony import */ var readable_stream__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(readable_stream__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var multipipe__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! multipipe */ \"(rsc)/./node_modules/multipipe/index.js\");\n/* harmony import */ var multipipe__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(multipipe__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var split2__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! split2 */ \"(rsc)/./node_modules/split2/index.js\");\n/* harmony import */ var split2__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(split2__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var strip_bom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! strip-bom */ \"(rsc)/./node_modules/subtitle/node_modules/strip-bom/index.js\");\n/* harmony import */ var strip_bom__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(strip_bom__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n\nvar filter = function filter(callback) {\n  return new readable_stream__WEBPACK_IMPORTED_MODULE_0__.Transform({\n    objectMode: true,\n    transform: function transform(chunk, _encoding, next) {\n      callback(chunk) ? next(null, chunk) : next();\n    }\n  });\n};\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar padLeft = function padLeft(value, length) {\n  if (length === void 0) {\n    length = 2;\n  }\n\n  return value.toString().padStart(length, '0');\n};\nvar createDuplex = function createDuplex(options) {\n  return new readable_stream__WEBPACK_IMPORTED_MODULE_0__.Duplex(_extends({\n    objectMode: true,\n    read: function read() {}\n  }, options));\n};\n\nfunction formatTimestamp(timestamp, options) {\n  if (options === void 0) {\n    options = {\n      format: 'SRT'\n    };\n  }\n\n  var date = new Date(0, 0, 0, 0, 0, 0, timestamp);\n  var hours = date.getHours();\n  var minutes = date.getMinutes();\n  var seconds = date.getSeconds();\n  var ms = Math.floor(timestamp - (hours * 3600000 + minutes * 60000 + seconds * 1000));\n  return padLeft(hours) + \":\" + padLeft(minutes) + \":\" + padLeft(seconds) + (options.format === 'WebVTT' ? '.' : ',') + padLeft(ms, 3);\n}\n\nvar map = function map(mapper) {\n  var index = 0;\n  return new readable_stream__WEBPACK_IMPORTED_MODULE_0__.Transform({\n    objectMode: true,\n    transform: function transform(chunk, _encoding, callback) {\n      callback(null, mapper(chunk, index++));\n    }\n  });\n};\n\nvar Parser = /*#__PURE__*/function () {\n  function Parser(_ref) {\n    var push = _ref.push;\n    this.push = push;\n    this.state = {\n      expect: 'header',\n      row: 0,\n      hasContentStarted: false,\n      isWebVTT: false,\n      node: {},\n      buffer: []\n    };\n  }\n\n  var _proto = Parser.prototype;\n\n  _proto.isIndex = function isIndex(line) {\n    return /^\\d+$/.test(line.trim());\n  };\n\n  _proto.isTimestamp = function isTimestamp(line) {\n    return RE_TIMESTAMP.test(line);\n  };\n\n  _proto.isVttComment = function isVttComment(line) {\n    return /^NOTE/.test(line);\n  };\n\n  _proto.getError = function getError(expected, index, row) {\n    return new Error(\"expected \" + expected + \" at row \" + (index + 1) + \", but received: \\\"\" + row + \"\\\"\");\n  };\n\n  _proto.parseLine = function parseLine(line) {\n    var contents = this.state.row === 0 ? strip_bom__WEBPACK_IMPORTED_MODULE_3___default()(line) : line;\n\n    if (!this.state.hasContentStarted) {\n      if (contents.trim()) {\n        this.state.hasContentStarted = true;\n      } else {\n        return;\n      }\n    }\n\n    var parse = {\n      header: this.parseHeader,\n      id: this.parseId,\n      timestamp: this.parseTimestamp,\n      text: this.parseText,\n      vtt_comment: this.parseVttComment\n    }[this.state.expect];\n    parse.call(this, contents);\n    this.state.row++;\n  };\n\n  _proto.flush = function flush() {\n    if (this.state.buffer.length > 0) {\n      this.pushNode();\n    }\n  };\n\n  _proto.parseHeader = function parseHeader(line) {\n    if (!this.state.isWebVTT) {\n      this.state.isWebVTT = /^WEBVTT/.test(line);\n\n      if (this.state.isWebVTT) {\n        this.state.node.type = 'header';\n      } else {\n        this.parseId(line);\n        return;\n      }\n    }\n\n    this.state.buffer.push(line);\n\n    if (!line) {\n      this.state.expect = 'id';\n      return;\n    }\n  };\n\n  _proto.parseId = function parseId(line) {\n    this.state.expect = 'timestamp';\n\n    if (this.state.node.type === 'header') {\n      this.pushNode();\n    }\n\n    if (this.isIndex(line)) return;\n\n    if (this.state.isWebVTT && this.isVttComment(line)) {\n      this.state.expect = 'vtt_comment';\n      return;\n    }\n\n    this.parseTimestamp(line);\n  };\n\n  _proto.parseVttComment = function parseVttComment(line) {\n    this.state.expect = 'vtt_comment';\n\n    if (line.trim() === '') {\n      this.state.expect = 'id';\n    }\n  };\n\n  _proto.parseTimestamp = function parseTimestamp(line) {\n    if (!this.isTimestamp(line)) {\n      throw this.getError('timestamp', this.state.row, line);\n    }\n\n    this.state.node = {\n      type: 'cue',\n      data: _extends({}, parseTimestamps(line), {\n        text: ''\n      })\n    };\n    this.state.expect = 'text';\n  };\n\n  _proto.parseText = function parseText(line) {\n    if (this.state.buffer.length === 0) {\n      this.state.buffer.push(line);\n      return;\n    }\n\n    if (this.isTimestamp(line)) {\n      var lastIndex = this.state.buffer.length - 1;\n\n      if (this.isIndex(this.state.buffer[lastIndex])) {\n        this.state.buffer.pop();\n      }\n\n      this.pushNode();\n      this.parseTimestamp(line);\n      return;\n    }\n\n    if (this.isVttComment(line)) {\n      this.pushNode();\n      this.parseVttComment(line);\n      return;\n    }\n\n    this.state.buffer.push(line);\n  };\n\n  _proto.pushNode = function pushNode() {\n    if (this.state.node.type === 'cue') {\n      while (true) {\n        var lastItem = this.state.buffer[this.state.buffer.length - 1];\n\n        if (['', '\\n'].includes(lastItem)) {\n          this.state.buffer.pop();\n        } else {\n          break;\n        }\n      }\n\n      while (true) {\n        var firstItem = this.state.buffer[0];\n\n        if (['', '\\n'].includes(firstItem)) {\n          this.state.buffer.shift();\n        } else {\n          break;\n        }\n      }\n\n      this.state.node.data.text = this.state.buffer.join('\\n');\n    }\n\n    if (this.state.node.type === 'header') {\n      this.state.node.data = this.state.buffer.join('\\n').trim();\n    }\n\n    this.push(this.state.node);\n    this.state.node = {};\n    this.state.buffer = [];\n  };\n\n  return Parser;\n}();\n\nvar parse = function parse() {\n  var parser = new Parser({\n    push: function push(node) {\n      return outputStream.push(node);\n    }\n  });\n  var stream = createDuplex({\n    write: function write(chunk, _encoding, next) {\n      try {\n        parser.parseLine(chunk.toString());\n      } catch (err) {\n        return next(err);\n      }\n\n      next();\n    }\n  });\n  var splitStream = split2__WEBPACK_IMPORTED_MODULE_2___default()();\n  splitStream.on('finish', function () {\n    parser.flush();\n    stream.push(null);\n  });\n  var outputStream = multipipe__WEBPACK_IMPORTED_MODULE_1___default()(splitStream, stream, {\n    objectMode: true\n  });\n  return outputStream;\n};\n\nvar parseSync = function parseSync(input) {\n  var buffer = [];\n  var parser = new Parser({\n    push: function push(node) {\n      return buffer.push(node);\n    }\n  });\n  input.replace(/\\r\\n/g, '\\n').split('\\n').forEach(function (line) {\n    return parser.parseLine(line);\n  });\n  parser.flush();\n  return buffer;\n};\n\nfunction parseTimestamp(timestamp) {\n  var match = timestamp.match(/^(?:(\\d{1,}):)?(\\d{1,2}):(\\d{1,2})[,.](\\d{1,3})$/);\n\n  if (!match) {\n    throw new Error('Invalid SRT or VTT time format: \"' + timestamp + '\"');\n  }\n\n  var hours = match[1] ? parseInt(match[1], 10) * 3600000 : 0;\n  var minutes = parseInt(match[2], 10) * 60000;\n  var seconds = parseInt(match[3], 10) * 1000;\n  var milliseconds = parseInt(match[4], 10);\n  return hours + minutes + seconds + milliseconds;\n}\n\nvar RE_TIMESTAMP = /^((?:\\d{1,}:)?\\d{1,2}:\\d{1,2}[,.]\\d{1,3}) --> ((?:\\d{1,}:)?\\d{1,2}:\\d{1,2}[,.]\\d{1,3})(?: (.*))?$/;\nfunction parseTimestamps(value) {\n  var match = RE_TIMESTAMP.exec(value);\n\n  if (!match) {\n    throw new Error('Invalid timestamp format');\n  }\n\n  var timestamp = {\n    start: parseTimestamp(match[1]),\n    end: parseTimestamp(match[2])\n  };\n\n  if (match[3]) {\n    timestamp.settings = match[3];\n  }\n\n  return timestamp;\n}\n\nvar resync = function resync(time) {\n  return map(function (node) {\n    if (node.type === 'cue') {\n      return _extends({}, node, {\n        data: _extends({}, node.data, {\n          start: node.data.start + time,\n          end: node.data.end + time\n        })\n      });\n    }\n\n    return node;\n  });\n};\n\nvar Formatter = /*#__PURE__*/function () {\n  function Formatter(options) {\n    this.options = options;\n    this.hasReceivedHeader = false;\n    this.isVTT = options.format === 'WebVTT';\n    this.index = 1;\n  }\n\n  var _proto = Formatter.prototype;\n\n  _proto.format = function format(node) {\n    var buffer = '';\n\n    if (node.type === 'header' && this.isVTT) {\n      this.hasReceivedHeader = true;\n      buffer += node.data + \"\\n\\n\";\n    }\n\n    if (node.type === 'cue') {\n      if (!this.hasReceivedHeader && this.isVTT) {\n        this.hasReceivedHeader = true;\n        buffer += 'WEBVTT\\n\\n';\n      }\n\n      buffer += this.formatCue(node.data, this.index++, this.options);\n    }\n\n    return buffer;\n  };\n\n  _proto.formatCue = function formatCue(cue, index, options) {\n    return [\"\" + (index > 1 ? '\\n' : '') + index, formatTimestamp(cue.start, options) + \" --> \" + formatTimestamp(cue.end, options) + (options.format === 'WebVTT' && cue.settings ? ' ' + cue.settings : ''), cue.text, ''].join('\\n');\n  };\n\n  return Formatter;\n}();\n\nvar stringify = function stringify(options) {\n  var formatter = new Formatter(options);\n  return map(function (chunk) {\n    return formatter.format(chunk);\n  });\n};\n\nvar stringifySync = function stringifySync(list, options) {\n  var formatter = new Formatter(options);\n  return list.reduce(function (buffer, node) {\n    return buffer + formatter.format(node);\n  }, '');\n};\n\n\n//# sourceMappingURL=subtitle.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/subtitle/dist/subtitle.esm.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/subtitle/node_modules/strip-bom/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/subtitle/node_modules/strip-bom/index.js ***!
  \***************************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = string => {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError(`Expected a string, got ${typeof string}`);\n\t}\n\n\t// Catches EFBBBF (UTF-8 BOM) because the buffer-to-string\n\t// conversion translates it to FEFF (UTF-16 BOM)\n\tif (string.charCodeAt(0) === 0xFEFF) {\n\t\treturn string.slice(1);\n\t}\n\n\treturn string;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvc3VidGl0bGUvbm9kZV9tb2R1bGVzL3N0cmlwLWJvbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0EsZ0RBQWdELGNBQWM7QUFDOUQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZWR1c2NyaWJlLy4vbm9kZV9tb2R1bGVzL3N1YnRpdGxlL25vZGVfbW9kdWxlcy9zdHJpcC1ib20vaW5kZXguanM/MDRlOCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0gc3RyaW5nID0+IHtcblx0aWYgKHR5cGVvZiBzdHJpbmcgIT09ICdzdHJpbmcnKSB7XG5cdFx0dGhyb3cgbmV3IFR5cGVFcnJvcihgRXhwZWN0ZWQgYSBzdHJpbmcsIGdvdCAke3R5cGVvZiBzdHJpbmd9YCk7XG5cdH1cblxuXHQvLyBDYXRjaGVzIEVGQkJCRiAoVVRGLTggQk9NKSBiZWNhdXNlIHRoZSBidWZmZXItdG8tc3RyaW5nXG5cdC8vIGNvbnZlcnNpb24gdHJhbnNsYXRlcyBpdCB0byBGRUZGIChVVEYtMTYgQk9NKVxuXHRpZiAoc3RyaW5nLmNoYXJDb2RlQXQoMCkgPT09IDB4RkVGRikge1xuXHRcdHJldHVybiBzdHJpbmcuc2xpY2UoMSk7XG5cdH1cblxuXHRyZXR1cm4gc3RyaW5nO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/subtitle/node_modules/strip-bom/index.js\n");

/***/ })

};
;