(()=>{var e={};e.id=8919,e.ids=[8919],e.modules={83581:e=>{function r(e){var r=Error("Cannot find module '"+e+"'");throw r.code="MODULE_NOT_FOUND",r}r.keys=()=>[],r.resolve=r,r.id=83581,e.exports=r},42916:e=>{function r(e){var r=Error("Cannot find module '"+e+"'");throw r.code="MODULE_NOT_FOUND",r}r.keys=()=>[],r.resolve=r,r.id=42916,e.exports=r},20399:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},27790:e=>{"use strict";e.exports=require("assert")},61282:e=>{"use strict";e.exports=require("child_process")},9714:e=>{"use strict";e.exports=require("constants")},17702:e=>{"use strict";e.exports=require("events")},92048:e=>{"use strict";e.exports=require("fs")},19801:e=>{"use strict";e.exports=require("os")},55315:e=>{"use strict";e.exports=require("path")},76162:e=>{"use strict";e.exports=require("stream")},21764:e=>{"use strict";e.exports=require("util")},12837:(e,r,t)=>{"use strict";t.r(r),t.d(r,{originalPathname:()=>P,patchFetch:()=>w,requestAsyncStorage:()=>b,routeModule:()=>h,serverHooks:()=>F,staticGenerationAsyncStorage:()=>d});var s={};t.r(s),t.d(s,{GET:()=>c});var o=t(49303),f=t(88716),p=t(60670),a=t(87070),i=t(60211),n=t.n(i),m=t(40788),g=t.n(m),l=t(55315),u=t.n(l);async function c(e){console.log("[Test FFmpeg API] Testing FFmpeg & FFprobe configuration...");let r={ffmpeg:{installerFound:!1,installerPath:"",pathExists:!1,working:!1,workingPath:""},ffprobe:{installerFound:!1,installerPath:"",pathExists:!1,working:!1,workingPath:""},systemPathsFfmpeg:[],systemPathsFfprobe:[],manualPathsFfmpeg:[],manualPathsFfprobe:[],error:""};try{try{let e=t(11511);if(e&&e.path){r.ffmpeg.installerFound=!0,r.ffmpeg.installerPath=e.path,r.ffmpeg.pathExists=g().existsSync(e.path);let t=e.path.replace(/ffmpeg$/,"ffprobe");r.ffprobe.installerPath=t,r.ffprobe.pathExists=g().existsSync(t),r.ffmpeg.pathExists&&(n().setFfmpegPath(e.path),r.ffmpeg.workingPath=e.path),r.ffprobe.pathExists&&(n().setFfprobePath(t),r.ffprobe.workingPath=t,r.ffprobe.installerFound=!0)}}catch(e){console.log("[Test FFmpeg API] FFmpeg installer require failed:",e.message)}for(let e of[{ffmpeg:u().join(process.cwd(),"node_modules","@ffmpeg-installer","darwin-x64","ffmpeg"),ffprobe:u().join(process.cwd(),"node_modules","@ffmpeg-installer","darwin-x64","ffprobe")},{ffmpeg:u().join(process.cwd(),"node_modules","@ffmpeg-installer","darwin-arm64","ffmpeg"),ffprobe:u().join(process.cwd(),"node_modules","@ffmpeg-installer","darwin-arm64","ffprobe")}])g().existsSync(e.ffmpeg)&&(r.manualPathsFfmpeg.push(e.ffmpeg),r.ffmpeg.workingPath||(n().setFfmpegPath(e.ffmpeg),r.ffmpeg.workingPath=e.ffmpeg)),g().existsSync(e.ffprobe)&&(r.manualPathsFfprobe.push(e.ffprobe),r.ffprobe.workingPath||(n().setFfprobePath(e.ffprobe),r.ffprobe.workingPath=e.ffprobe));for(let e of[{ffmpeg:"/usr/local/bin/ffmpeg",ffprobe:"/usr/local/bin/ffprobe"},{ffmpeg:"/usr/bin/ffmpeg",ffprobe:"/usr/bin/ffprobe"},{ffmpeg:"/opt/homebrew/bin/ffmpeg",ffprobe:"/opt/homebrew/bin/ffprobe"},{ffmpeg:"ffmpeg",ffprobe:"ffprobe"}])("ffmpeg"===e.ffmpeg||g().existsSync(e.ffmpeg))&&(r.systemPathsFfmpeg.push(e.ffmpeg),r.ffmpeg.workingPath||(n().setFfmpegPath(e.ffmpeg),r.ffmpeg.workingPath=e.ffmpeg)),("ffprobe"===e.ffprobe||g().existsSync(e.ffprobe))&&(r.systemPathsFfprobe.push(e.ffprobe),r.ffprobe.workingPath||(n().setFfprobePath(e.ffprobe),r.ffprobe.workingPath=e.ffprobe));let e="",s="";if(r.ffmpeg.workingPath)try{await new Promise((e,t)=>{let s=setTimeout(()=>t(Error("FFmpeg test timeout (formats)")),5e3);n().getAvailableFormats(o=>{clearTimeout(s),o?t(o):(r.ffmpeg.working=!0,e(null))})})}catch(r){e=r.message}else e="No FFmpeg binary found to test";if(r.ffprobe.workingPath)try{await new Promise((e,t)=>{let s=setTimeout(()=>t(Error("FFprobe test timeout")),5e3);n().ffprobe("dummy_test_file_for_api.mp4",(o,f)=>{clearTimeout(s),o&&o.message.toLowerCase().includes("cannot find ffprobe")?t(o):o&&o.message.toLowerCase().includes("no such file")?(r.ffprobe.working=!0,e(null)):o?t(o):(r.ffprobe.working=!0,e(null))})})}catch(e){s=e.message}else s="No FFprobe binary found to test";return r.error=[e,s].filter(Boolean).join("; ")||"All tests passed (or no binary to test)",(e||s)&&console.warn("[Test FFmpeg API] Test errors:",{ffmpegError:e,ffprobeError:s}),console.log("[Test FFmpeg API] Test results:",JSON.stringify(r,null,2)),a.NextResponse.json({success:r.ffmpeg.working&&r.ffprobe.working,ffmpegStatus:r})}catch(e){return console.error("[Test FFmpeg API] Global test failed:",e),r.error=e.message,a.NextResponse.json({success:!1,error:e.message,ffmpegStatus:r},{status:500})}}let h=new o.AppRouteRouteModule({definition:{kind:f.x.APP_ROUTE,page:"/api/test-ffmpeg/route",pathname:"/api/test-ffmpeg",filename:"route",bundlePath:"app/api/test-ffmpeg/route"},resolvedPagePath:"/Users/janjedrach/Cursor/eduscribe/src/app/api/test-ffmpeg/route.ts",nextConfigOutput:"standalone",userland:s}),{requestAsyncStorage:b,staticGenerationAsyncStorage:d,serverHooks:F}=h,P="/api/test-ffmpeg/route";function w(){return(0,p.patchFetch)({serverHooks:F,staticGenerationAsyncStorage:d})}}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[9276,5972,2071],()=>t(12837));module.exports=s})();