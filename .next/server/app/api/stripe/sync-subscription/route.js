(()=>{var e={};e.id=3710,e.ids=[3710],e.modules={20399:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},78893:e=>{"use strict";e.exports=require("buffer")},61282:e=>{"use strict";e.exports=require("child_process")},84770:e=>{"use strict";e.exports=require("crypto")},17702:e=>{"use strict";e.exports=require("events")},32615:e=>{"use strict";e.exports=require("http")},35240:e=>{"use strict";e.exports=require("https")},98216:e=>{"use strict";e.exports=require("net")},68621:e=>{"use strict";e.exports=require("punycode")},76162:e=>{"use strict";e.exports=require("stream")},82452:e=>{"use strict";e.exports=require("tls")},17360:e=>{"use strict";e.exports=require("url")},21764:e=>{"use strict";e.exports=require("util")},71568:e=>{"use strict";e.exports=require("zlib")},58359:()=>{},93739:()=>{},87815:(e,s,t)=>{"use strict";t.r(s),t.d(s,{originalPathname:()=>g,patchFetch:()=>_,requestAsyncStorage:()=>d,routeModule:()=>l,serverHooks:()=>y,staticGenerationAsyncStorage:()=>S});var r={};t.r(r),t.d(r,{POST:()=>p});var i=t(49303),n=t(88716),o=t(60670),a=t(87070),c=t(46029),u=t(23517);async function p(e){try{let s,t;console.log("[Stripe Sync] Manually syncing subscription...");let r="https://xhljckmlzdshxibnqsbj.supabase.co",i="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InhobGpja21semRzaHhpYm5xc2JqIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDc4NDIwNzIsImV4cCI6MjA2MzQxODA3Mn0.UuU3QBxwY3-DsSpXB-UiKarjgZWiFAFIzFbgUqacmIA";if(!r||!i)return console.error("[Stripe Sync] Missing Supabase environment variables:",{supabaseUrl:!!r,supabaseAnonKey:!!i}),a.NextResponse.json({error:"Server configuration error - missing Supabase credentials"},{status:500});let n=e.headers.get("authorization");if(!n||!n.startsWith("Bearer "))return console.error("[Stripe Sync] Authentication missing"),a.NextResponse.json({error:"Authentication required"},{status:401});let o=n.substring(7),p=(0,u.eI)(r,i),{data:{user:l},error:d}=await p.auth.getUser(o);if(d||!l)return console.error("[Stripe Sync] Invalid user token:",d),a.NextResponse.json({error:"Invalid authentication"},{status:401});let{sessionId:S}=await e.json();if(!S)return a.NextResponse.json({error:"Session ID is required"},{status:400});console.log("[Stripe Sync] Retrieving session for user:",l.id,"session:",S);let y=(0,c.kJ)(),g=await y.checkout.sessions.retrieve(S,{expand:["subscription"]});if(console.log("[Stripe Sync] Session retrieved:",{id:g.id,paymentStatus:g.payment_status,subscriptionId:g.subscription,metadata:g.metadata}),g.metadata?.userId!==l.id)return console.error("[Stripe Sync] Session does not belong to user"),a.NextResponse.json({error:"Unauthorized session access"},{status:403});if("paid"!==g.payment_status)return console.log("[Stripe Sync] Payment not completed yet:",g.payment_status),a.NextResponse.json({error:"Payment not completed"},{status:400});let{userId:_,planId:m,billingCycle:b}=g.metadata||{};if(!_||!m||!b)return console.error("[Stripe Sync] Missing required metadata:",g.metadata),a.NextResponse.json({error:"Missing metadata in session"},{status:400});let I=(0,u.eI)(r,i,{global:{headers:{Authorization:`Bearer ${o}`}}});console.log("[Stripe Sync] Checking for existing subscription...");let{data:h,error:x}=await I.from("user_subscriptions").select("*").eq("user_id",_).single();if(x&&"PGRST116"!==x.code&&console.error("[Stripe Sync] Error checking existing subscription:",x),h&&h.stripe_subscription_id===g.subscription)return console.log("[Stripe Sync] Subscription already exists and synced, skipping update"),a.NextResponse.json({success:!0,message:"Subscription already synced",subscription:h,planId:m,billingCycle:b});let f=new Date,R=new Date;"yearly"===b?R.setFullYear(R.getFullYear()+1):R.setMonth(R.getMonth()+1);let v={user_id:_,plan_id:m,billing_cycle:b,status:"active",current_period_start:f.toISOString(),current_period_end:R.toISOString(),cancel_at_period_end:!1,stripe_subscription_id:g.subscription,stripe_customer_id:g.customer,updated_at:new Date().toISOString()};if(console.log("[Stripe Sync] Upserting subscription data:",v),h){let{data:e,error:r}=await I.from("user_subscriptions").update(v).eq("user_id",_).select().single();s=e,t=r,console.log("[Stripe Sync] Updated existing subscription")}else{let{data:e,error:r}=await I.from("user_subscriptions").insert(v).select().single();s=e,t=r,console.log("[Stripe Sync] Created new subscription")}if(t)return console.error("[Stripe Sync] Error upserting subscription:",t),a.NextResponse.json({success:!0,message:"Payment successful, but subscription sync had issues. Please contact support if limits don't update.",warning:"Database sync incomplete",planId:m,billingCycle:b,error:t.message});let E=new Date().toISOString().slice(0,7);console.log("[Stripe Sync] Setting up usage tracking for month:",E);let{error:q}=await I.from("user_usage").upsert({user_id:_,month_year:E,notes_generated:0,video_notes_count:0,file_notes_count:0,text_notes_count:0,total_saved_notes:0,updated_at:new Date().toISOString()},{onConflict:"user_id,month_year",ignoreDuplicates:!0});return q?console.error("[Stripe Sync] Warning: Failed to initialize usage tracking:",q):console.log("[Stripe Sync] Usage tracking initialized successfully"),console.log("[Stripe Sync] Successfully synced subscription:",{userId:_,planId:m,billingCycle:b,subscriptionId:s?.id}),a.NextResponse.json({success:!0,message:"Subscription synced successfully",subscription:s,planId:m,billingCycle:b})}catch(e){return console.error("[Stripe Sync] Error syncing subscription:",e),a.NextResponse.json({error:"Failed to sync subscription",details:e.message,paymentStatus:"completed"},{status:500})}}let l=new i.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/stripe/sync-subscription/route",pathname:"/api/stripe/sync-subscription",filename:"route",bundlePath:"app/api/stripe/sync-subscription/route"},resolvedPagePath:"/Users/janjedrach/Cursor/eduscribe/src/app/api/stripe/sync-subscription/route.ts",nextConfigOutput:"standalone",userland:r}),{requestAsyncStorage:d,staticGenerationAsyncStorage:S,serverHooks:y}=l,g="/api/stripe/sync-subscription/route";function _(){return(0,o.patchFetch)({serverHooks:y,staticGenerationAsyncStorage:S})}},46029:(e,s,t)=>{"use strict";let r;t.d(s,{kJ:()=>n,rg:()=>o});var i=t(31059);let n=()=>{if(!r){let e=process.env.STRIPE_SECRET_KEY;if(!e)throw Error("STRIPE_SECRET_KEY is not defined in environment variables");r=new i.Z(e,{apiVersion:"2025-05-28.basil",appInfo:{name:"EduScribe",version:"1.0.0"}})}return r},o={student:{monthly:process.env.STRIPE_STUDENT_MONTHLY_PRICE_ID||"price_student_monthly",yearly:process.env.STRIPE_STUDENT_YEARLY_PRICE_ID||"price_student_yearly"},pro:{monthly:process.env.STRIPE_PRO_MONTHLY_PRICE_ID||"price_pro_monthly",yearly:process.env.STRIPE_PRO_YEARLY_PRICE_ID||"price_pro_yearly"}}}};var s=require("../../../../webpack-runtime.js");s.C(e);var t=e=>s(s.s=e),r=s.X(0,[9276,5972,3517,2749,1059],()=>t(87815));module.exports=r})();