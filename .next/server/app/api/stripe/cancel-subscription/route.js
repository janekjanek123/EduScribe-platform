/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/stripe/cancel-subscription/route";
exports.ids = ["app/api/stripe/cancel-subscription/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "child_process":
/*!********************************!*\
  !*** external "child_process" ***!
  \********************************/
/***/ ((module) => {

"use strict";
module.exports = require("child_process");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ }),

/***/ "?32c4":
/*!****************************!*\
  !*** bufferutil (ignored) ***!
  \****************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?66e9":
/*!********************************!*\
  !*** utf-8-validate (ignored) ***!
  \********************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fstripe%2Fcancel-subscription%2Froute&page=%2Fapi%2Fstripe%2Fcancel-subscription%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fstripe%2Fcancel-subscription%2Froute.ts&appDir=%2FUsers%2Fjanjedrach%2FCursor%2Feduscribe%2Fsrc%2Fapp&pageExtensions=js&pageExtensions=jsx&pageExtensions=ts&pageExtensions=tsx&pageExtensions=mdx&rootDir=%2FUsers%2Fjanjedrach%2FCursor%2Feduscribe&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fstripe%2Fcancel-subscription%2Froute&page=%2Fapi%2Fstripe%2Fcancel-subscription%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fstripe%2Fcancel-subscription%2Froute.ts&appDir=%2FUsers%2Fjanjedrach%2FCursor%2Feduscribe%2Fsrc%2Fapp&pageExtensions=js&pageExtensions=jsx&pageExtensions=ts&pageExtensions=tsx&pageExtensions=mdx&rootDir=%2FUsers%2Fjanjedrach%2FCursor%2Feduscribe&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_janjedrach_Cursor_eduscribe_src_app_api_stripe_cancel_subscription_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/stripe/cancel-subscription/route.ts */ \"(rsc)/./src/app/api/stripe/cancel-subscription/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"standalone\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/stripe/cancel-subscription/route\",\n        pathname: \"/api/stripe/cancel-subscription\",\n        filename: \"route\",\n        bundlePath: \"app/api/stripe/cancel-subscription/route\"\n    },\n    resolvedPagePath: \"/Users/janjedrach/Cursor/eduscribe/src/app/api/stripe/cancel-subscription/route.ts\",\n    nextConfigOutput,\n    userland: _Users_janjedrach_Cursor_eduscribe_src_app_api_stripe_cancel_subscription_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/stripe/cancel-subscription/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZzdHJpcGUlMkZjYW5jZWwtc3Vic2NyaXB0aW9uJTJGcm91dGUmcGFnZT0lMkZhcGklMkZzdHJpcGUlMkZjYW5jZWwtc3Vic2NyaXB0aW9uJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGc3RyaXBlJTJGY2FuY2VsLXN1YnNjcmlwdGlvbiUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRmphbmplZHJhY2glMkZDdXJzb3IlMkZlZHVzY3JpYmUlMkZzcmMlMkZhcHAmcGFnZUV4dGVuc2lvbnM9anMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz1tZHgmcm9vdERpcj0lMkZVc2VycyUyRmphbmplZHJhY2glMkZDdXJzb3IlMkZlZHVzY3JpYmUmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9c3RhbmRhbG9uZSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUNrQztBQUMvRztBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCIsInNvdXJjZXMiOlsid2VicGFjazovL2VkdXNjcmliZS8/NjQ5ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvVXNlcnMvamFuamVkcmFjaC9DdXJzb3IvZWR1c2NyaWJlL3NyYy9hcHAvYXBpL3N0cmlwZS9jYW5jZWwtc3Vic2NyaXB0aW9uL3JvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcInN0YW5kYWxvbmVcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvc3RyaXBlL2NhbmNlbC1zdWJzY3JpcHRpb24vcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9zdHJpcGUvY2FuY2VsLXN1YnNjcmlwdGlvblwiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvc3RyaXBlL2NhbmNlbC1zdWJzY3JpcHRpb24vcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCIvVXNlcnMvamFuamVkcmFjaC9DdXJzb3IvZWR1c2NyaWJlL3NyYy9hcHAvYXBpL3N0cmlwZS9jYW5jZWwtc3Vic2NyaXB0aW9uL3JvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9zdHJpcGUvY2FuY2VsLXN1YnNjcmlwdGlvbi9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fstripe%2Fcancel-subscription%2Froute&page=%2Fapi%2Fstripe%2Fcancel-subscription%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fstripe%2Fcancel-subscription%2Froute.ts&appDir=%2FUsers%2Fjanjedrach%2FCursor%2Feduscribe%2Fsrc%2Fapp&pageExtensions=js&pageExtensions=jsx&pageExtensions=ts&pageExtensions=tsx&pageExtensions=mdx&rootDir=%2FUsers%2Fjanjedrach%2FCursor%2Feduscribe&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/stripe/cancel-subscription/route.ts":
/*!*********************************************************!*\
  !*** ./src/app/api/stripe/cancel-subscription/route.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_stripe__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/stripe */ \"(rsc)/./src/lib/stripe.ts\");\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n\n\n\nasync function POST(request) {\n    try {\n        console.log(\"[Stripe Cancel] Processing subscription cancellation...\");\n        // Validate environment variables first\n        const supabaseUrl = \"https://xhljckmlzdshxibnqsbj.supabase.co\";\n        const supabaseAnonKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InhobGpja21semRzaHhpYm5xc2JqIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDc4NDIwNzIsImV4cCI6MjA2MzQxODA3Mn0.UuU3QBxwY3-DsSpXB-UiKarjgZWiFAFIzFbgUqacmIA\";\n        if (!supabaseUrl || !supabaseAnonKey) {\n            console.error(\"[Stripe Cancel] Missing Supabase environment variables:\", {\n                supabaseUrl: !!supabaseUrl,\n                supabaseAnonKey: !!supabaseAnonKey\n            });\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Server configuration error - missing Supabase credentials\"\n            }, {\n                status: 500\n            });\n        }\n        // Check authentication via Bearer token\n        const authHeader = request.headers.get(\"authorization\");\n        if (!authHeader || !authHeader.startsWith(\"Bearer \")) {\n            console.error(\"[Stripe Cancel] Authentication missing\");\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Authentication required\"\n            }, {\n                status: 401\n            });\n        }\n        const token = authHeader.substring(7);\n        // Verify user with Supabase\n        const supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_2__.createClient)(supabaseUrl, supabaseAnonKey);\n        const { data: { user }, error: userError } = await supabase.auth.getUser(token);\n        if (userError || !user) {\n            console.error(\"[Stripe Cancel] Invalid user token:\", userError);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Invalid authentication\"\n            }, {\n                status: 401\n            });\n        }\n        const { subscriptionId } = await request.json();\n        if (!subscriptionId) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Subscription ID is required\"\n            }, {\n                status: 400\n            });\n        }\n        console.log(\"[Stripe Cancel] Cancelling subscription for user:\", user.id, \"subscription:\", subscriptionId);\n        // Create user-authenticated Supabase client\n        const userSupabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_2__.createClient)(supabaseUrl, supabaseAnonKey, {\n            global: {\n                headers: {\n                    Authorization: `Bearer ${token}`\n                }\n            }\n        });\n        // Count total notes across ALL tables (including video_upload_notes)\n        console.log(\"[Stripe Cancel] Counting user notes from all tables...\");\n        const [textNotesResult, fileNotesResult, videoNotesResult, uploadVideoNotesResult] = await Promise.all([\n            userSupabase.from(\"text_notes\").select(\"id, created_at\", {\n                count: \"exact\"\n            }).eq(\"user_id\", user.id).order(\"created_at\", {\n                ascending: true\n            }),\n            userSupabase.from(\"file_notes\").select(\"id, created_at\", {\n                count: \"exact\"\n            }).eq(\"user_id\", user.id).order(\"created_at\", {\n                ascending: true\n            }),\n            userSupabase.from(\"video_notes\").select(\"id, created_at\", {\n                count: \"exact\"\n            }).eq(\"user_id\", user.id).order(\"created_at\", {\n                ascending: true\n            }),\n            // Add video upload notes support\n            userSupabase.from(\"video_upload_notes\").select(\"id, created_at\", {\n                count: \"exact\"\n            }).eq(\"user_id\", user.id).order(\"created_at\", {\n                ascending: true\n            }).then((result)=>result, (error)=>{\n                console.warn(\"[Stripe Cancel] video_upload_notes table might not exist, skipping:\", error.message);\n                return {\n                    data: [],\n                    count: 0\n                };\n            })\n        ]);\n        const textNotes = textNotesResult.data || [];\n        const fileNotes = fileNotesResult.data || [];\n        const videoNotes = videoNotesResult.data || [];\n        const uploadVideoNotes = uploadVideoNotesResult.data || [];\n        const allNotes = [\n            ...textNotes.map((note)=>({\n                    ...note,\n                    type: \"text\"\n                })),\n            ...fileNotes.map((note)=>({\n                    ...note,\n                    type: \"file\"\n                })),\n            ...videoNotes.map((note)=>({\n                    ...note,\n                    type: \"video\"\n                })),\n            ...uploadVideoNotes.map((note)=>({\n                    ...note,\n                    type: \"video_upload\"\n                }))\n        ].sort((a, b)=>new Date(a.created_at).getTime() - new Date(b.created_at).getTime());\n        const totalNotes = allNotes.length;\n        console.log(\"[Stripe Cancel] Total notes found:\", {\n            text: textNotes.length,\n            file: fileNotes.length,\n            video: videoNotes.length,\n            video_upload: uploadVideoNotes.length,\n            total: totalNotes\n        });\n        // Prepare note deletion statistics\n        let notesDeleted = {\n            text: 0,\n            file: 0,\n            video: 0,\n            video_upload: 0,\n            total: 0\n        };\n        // If user has more than 3 notes, delete the excess (keep the 3 oldest)\n        if (totalNotes > 3) {\n            const notesToDelete = allNotes.slice(3) // Remove everything after the first 3 (oldest)\n            ;\n            console.log(\"[Stripe Cancel] Notes to delete:\", notesToDelete.length);\n            // Group notes to delete by type for batch deletion\n            const textNotesToDelete = notesToDelete.filter((note)=>note.type === \"text\").map((note)=>note.id);\n            const fileNotesToDelete = notesToDelete.filter((note)=>note.type === \"file\").map((note)=>note.id);\n            const videoNotesToDelete = notesToDelete.filter((note)=>note.type === \"video\").map((note)=>note.id);\n            const uploadVideoNotesToDelete = notesToDelete.filter((note)=>note.type === \"video_upload\").map((note)=>note.id);\n            // Delete notes in batches by type\n            const deletionPromises = [];\n            if (textNotesToDelete.length > 0) {\n                deletionPromises.push(userSupabase.from(\"text_notes\").delete().in(\"id\", textNotesToDelete).then((result)=>{\n                    if (result.error) {\n                        console.error(\"[Stripe Cancel] Error deleting text notes:\", result.error);\n                        return {\n                            type: \"text\",\n                            count: 0,\n                            error: result.error\n                        };\n                    } else {\n                        notesDeleted.text = textNotesToDelete.length;\n                        console.log(\"[Stripe Cancel] Deleted text notes:\", textNotesToDelete.length);\n                        return {\n                            type: \"text\",\n                            count: textNotesToDelete.length,\n                            error: null\n                        };\n                    }\n                }));\n            }\n            if (fileNotesToDelete.length > 0) {\n                deletionPromises.push(userSupabase.from(\"file_notes\").delete().in(\"id\", fileNotesToDelete).then((result)=>{\n                    if (result.error) {\n                        console.error(\"[Stripe Cancel] Error deleting file notes:\", result.error);\n                        return {\n                            type: \"file\",\n                            count: 0,\n                            error: result.error\n                        };\n                    } else {\n                        notesDeleted.file = fileNotesToDelete.length;\n                        console.log(\"[Stripe Cancel] Deleted file notes:\", fileNotesToDelete.length);\n                        return {\n                            type: \"file\",\n                            count: fileNotesToDelete.length,\n                            error: null\n                        };\n                    }\n                }));\n            }\n            if (videoNotesToDelete.length > 0) {\n                deletionPromises.push(userSupabase.from(\"video_notes\").delete().in(\"id\", videoNotesToDelete).then((result)=>{\n                    if (result.error) {\n                        console.error(\"[Stripe Cancel] Error deleting video notes:\", result.error);\n                        return {\n                            type: \"video\",\n                            count: 0,\n                            error: result.error\n                        };\n                    } else {\n                        notesDeleted.video = videoNotesToDelete.length;\n                        console.log(\"[Stripe Cancel] Deleted video notes:\", videoNotesToDelete.length);\n                        return {\n                            type: \"video\",\n                            count: videoNotesToDelete.length,\n                            error: null\n                        };\n                    }\n                }));\n            }\n            if (uploadVideoNotesToDelete.length > 0) {\n                deletionPromises.push(userSupabase.from(\"video_upload_notes\").delete().in(\"id\", uploadVideoNotesToDelete).then((result)=>{\n                    if (result.error) {\n                        console.error(\"[Stripe Cancel] Error deleting video upload notes:\", result.error);\n                        return {\n                            type: \"video_upload\",\n                            count: 0,\n                            error: result.error\n                        };\n                    } else {\n                        notesDeleted.video_upload = uploadVideoNotesToDelete.length;\n                        console.log(\"[Stripe Cancel] Deleted video upload notes:\", uploadVideoNotesToDelete.length);\n                        return {\n                            type: \"video_upload\",\n                            count: uploadVideoNotesToDelete.length,\n                            error: null\n                        };\n                    }\n                }));\n            }\n            // Wait for all deletions to complete\n            try {\n                const deletionResults = await Promise.all(deletionPromises);\n                console.log(\"[Stripe Cancel] Deletion results:\", deletionResults);\n                // Update counts based on actual deletion results\n                deletionResults.forEach((result)=>{\n                    if (!result.error) {\n                        if (result.type === \"text\") {\n                            notesDeleted.text = result.count;\n                        } else if (result.type === \"file\") {\n                            notesDeleted.file = result.count;\n                        } else if (result.type === \"video\") {\n                            notesDeleted.video = result.count;\n                        } else if (result.type === \"video_upload\") {\n                            notesDeleted.video_upload = result.count;\n                        }\n                    }\n                });\n                notesDeleted.total = notesDeleted.text + notesDeleted.file + notesDeleted.video + notesDeleted.video_upload;\n                console.log(\"[Stripe Cancel] Final deletion statistics:\", notesDeleted);\n            } catch (deleteError) {\n                console.error(\"[Stripe Cancel] Error during note deletion:\", deleteError);\n            // Continue with cancellation even if note deletion fails\n            }\n        }\n        // Cancel the subscription in Stripe\n        const stripe = (0,_lib_stripe__WEBPACK_IMPORTED_MODULE_1__.getServerStripe)();\n        if (!stripe) {\n            console.error(\"[Stripe Cancel] Failed to initialize Stripe\");\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Stripe configuration error\"\n            }, {\n                status: 500\n            });\n        }\n        let cancelledSubscription = null;\n        let stripeError = null;\n        // Try to retrieve and cancel the subscription in Stripe\n        try {\n            console.log(\"[Stripe Cancel] Attempting to retrieve subscription from Stripe...\");\n            const subscription = await stripe.subscriptions.retrieve(subscriptionId);\n            console.log(\"[Stripe Cancel] Retrieved subscription:\", subscription.id, \"status:\", subscription.status);\n            // Check if subscription belongs to user (if metadata exists)\n            if (subscription.metadata?.userId && subscription.metadata.userId !== user.id) {\n                console.error(\"[Stripe Cancel] Subscription does not belong to user\");\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: \"Unauthorized subscription access\"\n                }, {\n                    status: 403\n                });\n            }\n            // Cancel the subscription immediately (not at period end)\n            cancelledSubscription = await stripe.subscriptions.cancel(subscriptionId);\n            console.log(\"[Stripe Cancel] Subscription cancelled in Stripe:\", {\n                id: cancelledSubscription.id,\n                status: cancelledSubscription.status\n            });\n        } catch (error) {\n            stripeError = error;\n            console.warn(\"[Stripe Cancel] Could not cancel subscription in Stripe:\", error.message);\n            // Check if subscription doesn't exist (404) or is already cancelled\n            if (error.code === \"resource_missing\" || error.statusCode === 404) {\n                console.log(\"[Stripe Cancel] Subscription not found in Stripe, proceeding with database cleanup only\");\n            } else if (error.message?.includes(\"already canceled\")) {\n                console.log(\"[Stripe Cancel] Subscription already cancelled in Stripe, proceeding with database cleanup\");\n            } else {\n                // For other Stripe errors, we still try to proceed with database cleanup\n                console.warn(\"[Stripe Cancel] Stripe error occurred, but proceeding with database cleanup:\", error.message);\n            }\n        }\n        // Update user subscription to free plan in the database (always do this)\n        console.log(\"[Stripe Cancel] Updating user subscription to free plan...\");\n        const { error: updateError } = await userSupabase.from(\"user_subscriptions\").update({\n            plan_id: \"free\",\n            status: \"cancelled\",\n            cancel_at_period_end: false,\n            cancelled_at: new Date().toISOString(),\n            updated_at: new Date().toISOString()\n        }).eq(\"user_id\", user.id).eq(\"stripe_subscription_id\", subscriptionId);\n        if (updateError) {\n            console.error(\"[Stripe Cancel] Error updating subscription in database:\", updateError);\n            // If we couldn't update the database and also failed in Stripe, return error\n            if (stripeError) {\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: \"Failed to cancel subscription both in Stripe and database\",\n                    details: `Stripe: ${stripeError.message}, Database: ${updateError.message}`\n                }, {\n                    status: 500\n                });\n            }\n        } else {\n            console.log(\"[Stripe Cancel] Successfully updated subscription to free plan in database\");\n        }\n        // Update the saved notes count in usage table\n        try {\n            const remainingNotesCount = Math.min(totalNotes, 3);\n            const currentMonth = new Date().toISOString().slice(0, 7);\n            const { error: usageError } = await userSupabase.from(\"user_usage\").upsert({\n                user_id: user.id,\n                month_year: currentMonth,\n                total_saved_notes: remainingNotesCount,\n                updated_at: new Date().toISOString()\n            }, {\n                onConflict: \"user_id,month_year\"\n            });\n            if (usageError) {\n                console.error(\"[Stripe Cancel] Error updating usage count:\", usageError);\n            } else {\n                console.log(\"[Stripe Cancel] Updated saved notes count to:\", remainingNotesCount);\n            }\n        } catch (usageUpdateError) {\n            console.error(\"[Stripe Cancel] Error updating usage:\", usageUpdateError);\n        }\n        // Prepare response\n        const responseData = {\n            success: true,\n            message: \"Subscription cancelled and downgraded to free plan successfully\",\n            subscription: {\n                id: cancelledSubscription?.id || subscriptionId,\n                status: cancelledSubscription?.status || \"cancelled\",\n                newPlan: \"free\"\n            },\n            notesDeleted: notesDeleted,\n            remainingNotes: Math.min(totalNotes, 3)\n        };\n        // Add warning if Stripe cancellation failed but database was updated\n        if (stripeError && !updateError) {\n            responseData.warning = \"Subscription cancelled in database, but Stripe operation had issues. Your subscription should still be inactive.\";\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(responseData);\n    } catch (error) {\n        console.error(\"[Stripe Cancel] Unexpected error cancelling subscription:\", error);\n        // Check if it's a Stripe error\n        if (error.type) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Stripe error: \" + error.message,\n                type: error.type\n            }, {\n                status: 400\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to cancel subscription\",\n            details: error.message\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/stripe/cancel-subscription/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/stripe.ts":
/*!***************************!*\
  !*** ./src/lib/stripe.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PLAN_PRICING: () => (/* binding */ PLAN_PRICING),\n/* harmony export */   STRIPE_PRICE_IDS: () => (/* binding */ STRIPE_PRICE_IDS),\n/* harmony export */   getServerStripe: () => (/* binding */ getServerStripe)\n/* harmony export */ });\n/* harmony import */ var stripe__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! stripe */ \"(rsc)/./node_modules/stripe/esm/stripe.esm.node.js\");\n\nlet stripe;\n// Initialize Stripe with proper configuration\nconst getServerStripe = ()=>{\n    if (!stripe) {\n        const stripeSecretKey = process.env.STRIPE_SECRET_KEY;\n        if (!stripeSecretKey) {\n            throw new Error(\"STRIPE_SECRET_KEY is not defined in environment variables\");\n        }\n        stripe = new stripe__WEBPACK_IMPORTED_MODULE_0__[\"default\"](stripeSecretKey, {\n            apiVersion: \"2025-05-28.basil\",\n            appInfo: {\n                name: \"EduScribe\",\n                version: \"1.0.0\"\n            }\n        });\n    }\n    return stripe;\n};\n// Plan pricing (for display purposes) - safe for client-side\nconst PLAN_PRICING = {\n    free: {\n        monthly: 0,\n        yearly: 0\n    },\n    student: {\n        monthly: 24.99,\n        yearly: 224.99\n    },\n    pro: {\n        monthly: 49.99,\n        yearly: 449.99\n    }\n};\n// Stripe Price IDs - these should match your Stripe dashboard\nconst STRIPE_PRICE_IDS = {\n    student: {\n        monthly: process.env.STRIPE_STUDENT_MONTHLY_PRICE_ID || \"price_student_monthly\",\n        yearly: process.env.STRIPE_STUDENT_YEARLY_PRICE_ID || \"price_student_yearly\"\n    },\n    pro: {\n        monthly: process.env.STRIPE_PRO_MONTHLY_PRICE_ID || \"price_pro_monthly\",\n        yearly: process.env.STRIPE_PRO_YEARLY_PRICE_ID || \"price_pro_yearly\"\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL3N0cmlwZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTJCO0FBRTNCLElBQUlDO0FBRUosOENBQThDO0FBQ3ZDLE1BQU1DLGtCQUFrQjtJQUM3QixJQUFJLENBQUNELFFBQVE7UUFDWCxNQUFNRSxrQkFBa0JDLFFBQVFDLEdBQUcsQ0FBQ0MsaUJBQWlCO1FBQ3JELElBQUksQ0FBQ0gsaUJBQWlCO1lBQ3BCLE1BQU0sSUFBSUksTUFBTTtRQUNsQjtRQUNBTixTQUFTLElBQUlELDhDQUFNQSxDQUFDRyxpQkFBaUI7WUFDbkNLLFlBQVk7WUFDWkMsU0FBUztnQkFDUEMsTUFBTTtnQkFDTkMsU0FBUztZQUNYO1FBQ0Y7SUFDRjtJQUNBLE9BQU9WO0FBQ1QsRUFBQztBQUVELDZEQUE2RDtBQUN0RCxNQUFNVyxlQUFlO0lBQzFCQyxNQUFNO1FBQ0pDLFNBQVM7UUFDVEMsUUFBUTtJQUNWO0lBQ0FDLFNBQVM7UUFDUEYsU0FBUztRQUNUQyxRQUFRO0lBQ1Y7SUFDQUUsS0FBSztRQUNISCxTQUFTO1FBQ1RDLFFBQVE7SUFDVjtBQUNGLEVBQVU7QUFFViw4REFBOEQ7QUFDdkQsTUFBTUcsbUJBQW1CO0lBQzlCRixTQUFTO1FBQ1BGLFNBQVNWLFFBQVFDLEdBQUcsQ0FBQ2MsK0JBQStCLElBQUk7UUFDeERKLFFBQVFYLFFBQVFDLEdBQUcsQ0FBQ2UsOEJBQThCLElBQUk7SUFDeEQ7SUFDQUgsS0FBSztRQUNISCxTQUFTVixRQUFRQyxHQUFHLENBQUNnQiwyQkFBMkIsSUFBSTtRQUNwRE4sUUFBUVgsUUFBUUMsR0FBRyxDQUFDaUIsMEJBQTBCLElBQUk7SUFDcEQ7QUFDRixFQUFVIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZWR1c2NyaWJlLy4vc3JjL2xpYi9zdHJpcGUudHM/Nzk4YSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU3RyaXBlIGZyb20gJ3N0cmlwZSdcblxubGV0IHN0cmlwZTogU3RyaXBlXG5cbi8vIEluaXRpYWxpemUgU3RyaXBlIHdpdGggcHJvcGVyIGNvbmZpZ3VyYXRpb25cbmV4cG9ydCBjb25zdCBnZXRTZXJ2ZXJTdHJpcGUgPSAoKSA9PiB7XG4gIGlmICghc3RyaXBlKSB7XG4gICAgY29uc3Qgc3RyaXBlU2VjcmV0S2V5ID0gcHJvY2Vzcy5lbnYuU1RSSVBFX1NFQ1JFVF9LRVlcbiAgICBpZiAoIXN0cmlwZVNlY3JldEtleSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdTVFJJUEVfU0VDUkVUX0tFWSBpcyBub3QgZGVmaW5lZCBpbiBlbnZpcm9ubWVudCB2YXJpYWJsZXMnKVxuICAgIH1cbiAgICBzdHJpcGUgPSBuZXcgU3RyaXBlKHN0cmlwZVNlY3JldEtleSwge1xuICAgICAgYXBpVmVyc2lvbjogJzIwMjUtMDUtMjguYmFzaWwnLFxuICAgICAgYXBwSW5mbzoge1xuICAgICAgICBuYW1lOiAnRWR1U2NyaWJlJyxcbiAgICAgICAgdmVyc2lvbjogJzEuMC4wJyxcbiAgICAgIH0sXG4gICAgfSlcbiAgfVxuICByZXR1cm4gc3RyaXBlXG59XG5cbi8vIFBsYW4gcHJpY2luZyAoZm9yIGRpc3BsYXkgcHVycG9zZXMpIC0gc2FmZSBmb3IgY2xpZW50LXNpZGVcbmV4cG9ydCBjb25zdCBQTEFOX1BSSUNJTkcgPSB7XG4gIGZyZWU6IHtcbiAgICBtb250aGx5OiAwLFxuICAgIHllYXJseTogMCxcbiAgfSxcbiAgc3R1ZGVudDoge1xuICAgIG1vbnRobHk6IDI0Ljk5LFxuICAgIHllYXJseTogMjI0Ljk5LFxuICB9LFxuICBwcm86IHtcbiAgICBtb250aGx5OiA0OS45OSxcbiAgICB5ZWFybHk6IDQ0OS45OSxcbiAgfSxcbn0gYXMgY29uc3RcblxuLy8gU3RyaXBlIFByaWNlIElEcyAtIHRoZXNlIHNob3VsZCBtYXRjaCB5b3VyIFN0cmlwZSBkYXNoYm9hcmRcbmV4cG9ydCBjb25zdCBTVFJJUEVfUFJJQ0VfSURTID0ge1xuICBzdHVkZW50OiB7XG4gICAgbW9udGhseTogcHJvY2Vzcy5lbnYuU1RSSVBFX1NUVURFTlRfTU9OVEhMWV9QUklDRV9JRCB8fCAncHJpY2Vfc3R1ZGVudF9tb250aGx5JyxcbiAgICB5ZWFybHk6IHByb2Nlc3MuZW52LlNUUklQRV9TVFVERU5UX1lFQVJMWV9QUklDRV9JRCB8fCAncHJpY2Vfc3R1ZGVudF95ZWFybHknLFxuICB9LFxuICBwcm86IHtcbiAgICBtb250aGx5OiBwcm9jZXNzLmVudi5TVFJJUEVfUFJPX01PTlRITFlfUFJJQ0VfSUQgfHwgJ3ByaWNlX3Byb19tb250aGx5JyxcbiAgICB5ZWFybHk6IHByb2Nlc3MuZW52LlNUUklQRV9QUk9fWUVBUkxZX1BSSUNFX0lEIHx8ICdwcmljZV9wcm9feWVhcmx5JyxcbiAgfSxcbn0gYXMgY29uc3RcblxuZXhwb3J0IHR5cGUgUGxhbklkID0gJ2ZyZWUnIHwgJ3N0dWRlbnQnIHwgJ3BybydcbmV4cG9ydCB0eXBlIEJpbGxpbmdDeWNsZSA9ICdtb250aGx5JyB8ICd5ZWFybHknICJdLCJuYW1lcyI6WyJTdHJpcGUiLCJzdHJpcGUiLCJnZXRTZXJ2ZXJTdHJpcGUiLCJzdHJpcGVTZWNyZXRLZXkiLCJwcm9jZXNzIiwiZW52IiwiU1RSSVBFX1NFQ1JFVF9LRVkiLCJFcnJvciIsImFwaVZlcnNpb24iLCJhcHBJbmZvIiwibmFtZSIsInZlcnNpb24iLCJQTEFOX1BSSUNJTkciLCJmcmVlIiwibW9udGhseSIsInllYXJseSIsInN0dWRlbnQiLCJwcm8iLCJTVFJJUEVfUFJJQ0VfSURTIiwiU1RSSVBFX1NUVURFTlRfTU9OVEhMWV9QUklDRV9JRCIsIlNUUklQRV9TVFVERU5UX1lFQVJMWV9QUklDRV9JRCIsIlNUUklQRV9QUk9fTU9OVEhMWV9QUklDRV9JRCIsIlNUUklQRV9QUk9fWUVBUkxZX1BSSUNFX0lEIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/stripe.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@supabase","vendor-chunks/tr46","vendor-chunks/ws","vendor-chunks/whatwg-url","vendor-chunks/webidl-conversions","vendor-chunks/stripe","vendor-chunks/qs","vendor-chunks/object-inspect","vendor-chunks/get-intrinsic","vendor-chunks/side-channel-list","vendor-chunks/side-channel-weakmap","vendor-chunks/has-symbols","vendor-chunks/function-bind","vendor-chunks/side-channel-map","vendor-chunks/side-channel","vendor-chunks/get-proto","vendor-chunks/call-bind-apply-helpers","vendor-chunks/dunder-proto","vendor-chunks/math-intrinsics","vendor-chunks/call-bound","vendor-chunks/es-errors","vendor-chunks/gopd","vendor-chunks/es-define-property","vendor-chunks/hasown","vendor-chunks/es-object-atoms"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fstripe%2Fcancel-subscription%2Froute&page=%2Fapi%2Fstripe%2Fcancel-subscription%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fstripe%2Fcancel-subscription%2Froute.ts&appDir=%2FUsers%2Fjanjedrach%2FCursor%2Feduscribe%2Fsrc%2Fapp&pageExtensions=js&pageExtensions=jsx&pageExtensions=ts&pageExtensions=tsx&pageExtensions=mdx&rootDir=%2FUsers%2Fjanjedrach%2FCursor%2Feduscribe&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();