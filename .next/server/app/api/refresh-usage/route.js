"use strict";(()=>{var e={};e.id=9882,e.ids=[9882],e.modules={20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},78893:e=>{e.exports=require("buffer")},84770:e=>{e.exports=require("crypto")},17702:e=>{e.exports=require("events")},32615:e=>{e.exports=require("http")},35240:e=>{e.exports=require("https")},98216:e=>{e.exports=require("net")},68621:e=>{e.exports=require("punycode")},76162:e=>{e.exports=require("stream")},82452:e=>{e.exports=require("tls")},17360:e=>{e.exports=require("url")},71568:e=>{e.exports=require("zlib")},45146:(e,r,s)=>{s.r(r),s.d(r,{originalPathname:()=>m,patchFetch:()=>x,requestAsyncStorage:()=>l,routeModule:()=>h,serverHooks:()=>f,staticGenerationAsyncStorage:()=>g});var t={};s.r(t),s.d(t,{POST:()=>d,dynamic:()=>p});var a=s(49303),o=s(88716),i=s(60670),n=s(87070),u=s(23517),c=s(58026);async function d(e){console.log("[Refresh Usage API] Request received: POST");try{let r=e.headers.get("authorization");if(!r||!r.startsWith("Bearer "))return console.error("[Refresh Usage API] Authentication missing"),n.NextResponse.json({success:!1,error:"Authentication required",message:"Valid Bearer token is required"},{status:401});let s=r.replace("Bearer ",""),t=(0,u.eI)("https://xhljckmlzdshxibnqsbj.supabase.co","eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InhobGpja21semRzaHhpYm5xc2JqIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDc4NDIwNzIsImV4cCI6MjA2MzQxODA3Mn0.UuU3QBxwY3-DsSpXB-UiKarjgZWiFAFIzFbgUqacmIA",{global:{headers:{Authorization:`Bearer ${s}`}}}),{data:{user:a},error:o}=await t.auth.getUser(s);if(o||!a)return console.error("[Refresh Usage API] Authentication failed:",o?.message),n.NextResponse.json({success:!1,error:"Authentication failed",message:o?.message||"Invalid authentication token"},{status:401});if(console.log(`[Refresh Usage API] User authenticated: ${a.id}`),console.log("[Refresh Usage API] Refreshing saved notes count..."),!await (0,c.u6)(a.id,s))return console.error("[Refresh Usage API] Failed to refresh saved notes count"),n.NextResponse.json({success:!1,error:"Refresh failed",message:"Failed to refresh saved notes count"},{status:500});let i=new Date().toISOString().slice(0,7),{data:d,error:p}=await t.from("user_usage").select("*").eq("user_id",a.id).eq("month_year",i).single();if(p)return console.error("[Refresh Usage API] Error fetching updated usage:",p),n.NextResponse.json({success:!0,message:"Saved notes count refreshed successfully, but could not fetch updated data"});return console.log(`[Refresh Usage API] Successfully refreshed usage for user ${a.id}`),n.NextResponse.json({success:!0,message:"Saved notes count refreshed successfully",data:d})}catch(e){return console.error("[Refresh Usage API] Error refreshing usage:",e),n.NextResponse.json({success:!1,error:"Server error",message:"An unexpected error occurred while refreshing usage",details:e.message},{status:500})}}let p="force-dynamic",h=new a.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/refresh-usage/route",pathname:"/api/refresh-usage",filename:"route",bundlePath:"app/api/refresh-usage/route"},resolvedPagePath:"/Users/janjedrach/Cursor/eduscribe/src/app/api/refresh-usage/route.ts",nextConfigOutput:"standalone",userland:t}),{requestAsyncStorage:l,staticGenerationAsyncStorage:g,serverHooks:f}=h,m="/api/refresh-usage/route";function x(){return(0,i.patchFetch)({serverHooks:f,staticGenerationAsyncStorage:g})}}};var r=require("../../../webpack-runtime.js");r.C(e);var s=e=>r(r.s=e),t=r.X(0,[9276,5972,3517,8285],()=>s(45146));module.exports=t})();