(()=>{var e={};e.id=446,e.ids=[446],e.modules={20399:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},78893:e=>{"use strict";e.exports=require("buffer")},61282:e=>{"use strict";e.exports=require("child_process")},84770:e=>{"use strict";e.exports=require("crypto")},17702:e=>{"use strict";e.exports=require("events")},32615:e=>{"use strict";e.exports=require("http")},35240:e=>{"use strict";e.exports=require("https")},98216:e=>{"use strict";e.exports=require("net")},68621:e=>{"use strict";e.exports=require("punycode")},76162:e=>{"use strict";e.exports=require("stream")},82452:e=>{"use strict";e.exports=require("tls")},17360:e=>{"use strict";e.exports=require("url")},21764:e=>{"use strict";e.exports=require("util")},71568:e=>{"use strict";e.exports=require("zlib")},58359:()=>{},93739:()=>{},56475:(e,t,r)=>{"use strict";r.r(t),r.d(t,{originalPathname:()=>S,patchFetch:()=>h,requestAsyncStorage:()=>d,routeModule:()=>u,serverHooks:()=>_,staticGenerationAsyncStorage:()=>g});var o={};r.r(o),r.d(o,{POST:()=>p});var i=r(49303),s=r(88716),n=r(60670),a=r(87070),l=r(46029),c=r(23517);async function p(e){try{console.log("[Stripe Cancel] Processing subscription cancellation...");let t="https://xhljckmlzdshxibnqsbj.supabase.co",r="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InhobGpja21semRzaHhpYm5xc2JqIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDc4NDIwNzIsImV4cCI6MjA2MzQxODA3Mn0.UuU3QBxwY3-DsSpXB-UiKarjgZWiFAFIzFbgUqacmIA";if(!t||!r)return console.error("[Stripe Cancel] Missing Supabase environment variables:",{supabaseUrl:!!t,supabaseAnonKey:!!r}),a.NextResponse.json({error:"Server configuration error - missing Supabase credentials"},{status:500});let o=e.headers.get("authorization");if(!o||!o.startsWith("Bearer "))return console.error("[Stripe Cancel] Authentication missing"),a.NextResponse.json({error:"Authentication required"},{status:401});let i=o.substring(7),s=(0,c.eI)(t,r),{data:{user:n},error:p}=await s.auth.getUser(i);if(p||!n)return console.error("[Stripe Cancel] Invalid user token:",p),a.NextResponse.json({error:"Invalid authentication"},{status:401});let{subscriptionId:u}=await e.json();if(!u)return a.NextResponse.json({error:"Subscription ID is required"},{status:400});console.log("[Stripe Cancel] Cancelling subscription for user:",n.id,"subscription:",u);let d=(0,c.eI)(t,r,{global:{headers:{Authorization:`Bearer ${i}`}}});console.log("[Stripe Cancel] Counting user notes from all tables...");let[g,_,S,h]=await Promise.all([d.from("text_notes").select("id, created_at",{count:"exact"}).eq("user_id",n.id).order("created_at",{ascending:!0}),d.from("file_notes").select("id, created_at",{count:"exact"}).eq("user_id",n.id).order("created_at",{ascending:!0}),d.from("video_notes").select("id, created_at",{count:"exact"}).eq("user_id",n.id).order("created_at",{ascending:!0}),d.from("video_upload_notes").select("id, created_at",{count:"exact"}).eq("user_id",n.id).order("created_at",{ascending:!0}).then(e=>e,e=>(console.warn("[Stripe Cancel] video_upload_notes table might not exist, skipping:",e.message),{data:[],count:0}))]),m=g.data||[],b=_.data||[],f=S.data||[],v=h.data||[],x=[...m.map(e=>({...e,type:"text"})),...b.map(e=>({...e,type:"file"})),...f.map(e=>({...e,type:"video"})),...v.map(e=>({...e,type:"video_upload"}))].sort((e,t)=>new Date(e.created_at).getTime()-new Date(t.created_at).getTime()),y=x.length;console.log("[Stripe Cancel] Total notes found:",{text:m.length,file:b.length,video:f.length,video_upload:v.length,total:y});let C={text:0,file:0,video:0,video_upload:0,total:0};if(y>3){let e=x.slice(3);console.log("[Stripe Cancel] Notes to delete:",e.length);let t=e.filter(e=>"text"===e.type).map(e=>e.id),r=e.filter(e=>"file"===e.type).map(e=>e.id),o=e.filter(e=>"video"===e.type).map(e=>e.id),i=e.filter(e=>"video_upload"===e.type).map(e=>e.id),s=[];t.length>0&&s.push(d.from("text_notes").delete().in("id",t).then(e=>e.error?(console.error("[Stripe Cancel] Error deleting text notes:",e.error),{type:"text",count:0,error:e.error}):(C.text=t.length,console.log("[Stripe Cancel] Deleted text notes:",t.length),{type:"text",count:t.length,error:null}))),r.length>0&&s.push(d.from("file_notes").delete().in("id",r).then(e=>e.error?(console.error("[Stripe Cancel] Error deleting file notes:",e.error),{type:"file",count:0,error:e.error}):(C.file=r.length,console.log("[Stripe Cancel] Deleted file notes:",r.length),{type:"file",count:r.length,error:null}))),o.length>0&&s.push(d.from("video_notes").delete().in("id",o).then(e=>e.error?(console.error("[Stripe Cancel] Error deleting video notes:",e.error),{type:"video",count:0,error:e.error}):(C.video=o.length,console.log("[Stripe Cancel] Deleted video notes:",o.length),{type:"video",count:o.length,error:null}))),i.length>0&&s.push(d.from("video_upload_notes").delete().in("id",i).then(e=>e.error?(console.error("[Stripe Cancel] Error deleting video upload notes:",e.error),{type:"video_upload",count:0,error:e.error}):(C.video_upload=i.length,console.log("[Stripe Cancel] Deleted video upload notes:",i.length),{type:"video_upload",count:i.length,error:null})));try{let e=await Promise.all(s);console.log("[Stripe Cancel] Deletion results:",e),e.forEach(e=>{e.error||("text"===e.type?C.text=e.count:"file"===e.type?C.file=e.count:"video"===e.type?C.video=e.count:"video_upload"!==e.type||(C.video_upload=e.count))}),C.total=C.text+C.file+C.video+C.video_upload,console.log("[Stripe Cancel] Final deletion statistics:",C)}catch(e){console.error("[Stripe Cancel] Error during note deletion:",e)}}let I=(0,l.kJ)();if(!I)return console.error("[Stripe Cancel] Failed to initialize Stripe"),a.NextResponse.json({error:"Stripe configuration error"},{status:500});let E=null,R=null;try{console.log("[Stripe Cancel] Attempting to retrieve subscription from Stripe...");let e=await I.subscriptions.retrieve(u);if(console.log("[Stripe Cancel] Retrieved subscription:",e.id,"status:",e.status),e.metadata?.userId&&e.metadata.userId!==n.id)return console.error("[Stripe Cancel] Subscription does not belong to user"),a.NextResponse.json({error:"Unauthorized subscription access"},{status:403});E=await I.subscriptions.cancel(u),console.log("[Stripe Cancel] Subscription cancelled in Stripe:",{id:E.id,status:E.status})}catch(e){R=e,console.warn("[Stripe Cancel] Could not cancel subscription in Stripe:",e.message),"resource_missing"===e.code||404===e.statusCode?console.log("[Stripe Cancel] Subscription not found in Stripe, proceeding with database cleanup only"):e.message?.includes("already canceled")?console.log("[Stripe Cancel] Subscription already cancelled in Stripe, proceeding with database cleanup"):console.warn("[Stripe Cancel] Stripe error occurred, but proceeding with database cleanup:",e.message)}console.log("[Stripe Cancel] Updating user subscription to free plan...");let{error:w}=await d.from("user_subscriptions").update({plan_id:"free",status:"cancelled",cancel_at_period_end:!1,cancelled_at:new Date().toISOString(),updated_at:new Date().toISOString()}).eq("user_id",n.id).eq("stripe_subscription_id",u);if(w){if(console.error("[Stripe Cancel] Error updating subscription in database:",w),R)return a.NextResponse.json({error:"Failed to cancel subscription both in Stripe and database",details:`Stripe: ${R.message}, Database: ${w.message}`},{status:500})}else console.log("[Stripe Cancel] Successfully updated subscription to free plan in database");try{let e=Math.min(y,3),t=new Date().toISOString().slice(0,7),{error:r}=await d.from("user_usage").upsert({user_id:n.id,month_year:t,total_saved_notes:e,updated_at:new Date().toISOString()},{onConflict:"user_id,month_year"});r?console.error("[Stripe Cancel] Error updating usage count:",r):console.log("[Stripe Cancel] Updated saved notes count to:",e)}catch(e){console.error("[Stripe Cancel] Error updating usage:",e)}let q={success:!0,message:"Subscription cancelled and downgraded to free plan successfully",subscription:{id:E?.id||u,status:E?.status||"cancelled",newPlan:"free"},notesDeleted:C,remainingNotes:Math.min(y,3)};return R&&!w&&(q.warning="Subscription cancelled in database, but Stripe operation had issues. Your subscription should still be inactive."),a.NextResponse.json(q)}catch(e){if(console.error("[Stripe Cancel] Unexpected error cancelling subscription:",e),e.type)return a.NextResponse.json({error:"Stripe error: "+e.message,type:e.type},{status:400});return a.NextResponse.json({error:"Failed to cancel subscription",details:e.message},{status:500})}}let u=new i.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/stripe/cancel-subscription/route",pathname:"/api/stripe/cancel-subscription",filename:"route",bundlePath:"app/api/stripe/cancel-subscription/route"},resolvedPagePath:"/Users/janjedrach/Cursor/eduscribe/src/app/api/stripe/cancel-subscription/route.ts",nextConfigOutput:"standalone",userland:o}),{requestAsyncStorage:d,staticGenerationAsyncStorage:g,serverHooks:_}=u,S="/api/stripe/cancel-subscription/route";function h(){return(0,n.patchFetch)({serverHooks:_,staticGenerationAsyncStorage:g})}},46029:(e,t,r)=>{"use strict";let o;r.d(t,{kJ:()=>s,rg:()=>n});var i=r(31059);let s=()=>{if(!o){let e=process.env.STRIPE_SECRET_KEY;if(!e)throw Error("STRIPE_SECRET_KEY is not defined in environment variables");o=new i.Z(e,{apiVersion:"2025-05-28.basil",appInfo:{name:"EduScribe",version:"1.0.0"}})}return o},n={student:{monthly:process.env.STRIPE_STUDENT_MONTHLY_PRICE_ID||"price_student_monthly",yearly:process.env.STRIPE_STUDENT_YEARLY_PRICE_ID||"price_student_yearly"},pro:{monthly:process.env.STRIPE_PRO_MONTHLY_PRICE_ID||"price_pro_monthly",yearly:process.env.STRIPE_PRO_YEARLY_PRICE_ID||"price_pro_yearly"}}}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),o=t.X(0,[9276,5972,3517,2749,1059],()=>r(56475));module.exports=o})();